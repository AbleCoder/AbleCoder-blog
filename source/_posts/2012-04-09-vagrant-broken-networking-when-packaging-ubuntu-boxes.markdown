---
layout: post
title: "Vagrant: Broken Networking When Packaging Ubuntu Boxes"
date: 2012-04-09 18:25
comments: true
categories:
- Vagrant
- Ubuntu
- Networking
- VirtualBox
- udev
---

I have been using Vagrant to manage my local development server VMs. For my development server VMs I add a
host-only network to allow access to it from a static IP address. Until recently when sharing my development
environment I would only send people my Vagrantfile and puppet manifests instead of packaging a full blown box
file. It was clearly a waste of time and bandwidth for others to wait for puppet provisioning to download,
install and configure each of the required packages so I decided to package my VM into a box file using
Vagrant's `package` command.

## The Problem: Host-Only Network Broken

After packaging my VM I tested it using the original Vagrantfile with the `config.vm.box` updated.
Right off the bat I realized the host-only network wasn't working but the NAT network was working.
After some investigation it turns out the device name for the host-only network adapter was `eth2`
instead of `eth1` as I would expect.

<!-- more -->

_**NOTE:** Vagrant by convention will always have a NAT network used for SSH access to the guest OS on
the VM's Network Adapter 1 with device name `eth0` in Ubuntu. Any additional networks defined in the
Vagrantfile will be setup using additional network adapters and an incremented device name in Ubuntu
by default. For example a single network specified in the Vagrantfile would use the VM's Network
Adapter 2 and device name `eth1` in Ubuntu by default._

Manually changing the host-only network to use `eth2` from within the VM would temporarily fix the network
but I want to figure out why `eth1` is missing and fix it.

## The Cause: New MAC address, Old udev Rules

The network interface device naming woes (`eth2` instead of `eth1`) stems from the fact that VirtualBox
generates a new mac address (unless explicitly set) when adding network adapters to a VM. Vagrant knows
this and handles storing and setting the NAT network's MAC address. Vagrant does NOT handle storing and
setting the MAC address for the networks defined in your Vagrantfile by default. This means when you
create a new VM from the new base box the NAT network's network adapter will use the original MAC address
but the networks defined in the Vagrantfile will use newly generate MAC addresses by default.

Ubuntu uses [udev](http://wiki.debian.org/udev) to dynamically update `/dev` (in other words dynamically
set device names. `eth0` for example). Ubuntu stores persistent udev rules in the `/etc/udev/rules.d` folder.
The rules stored in these files are processed by the udev daemon on boot. In Ubuntu the persistent udev
rules for network devices are stored in the `/etc/udev/rules.d/70-persistent-net.rules` file. Below
is the `70-persistent-net.rules` file from my new VM:

``` bash /etc/udev/rules.d/70-persistent-net.rules
# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:57:fd:7b", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:53:22:32", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth1"
```

The udev rule for `eth1` has the MAC address for the original VM Network Adapter 2 instead of the
MAC address generated by VirtualBox when creating the new VM from the base box. Since the MAC address
of the new VM's Network Adapter 2 doesn't match the udev rule it is not assigned the device name `eth1`.
Instead the device name `eth2` is assigned.

Vagrant uses `eth1` in host-only network interface defined in the `/etc/network/interfaces` file by
default. Since `eth1` network interface doesn't exist our host-only network does not work.

## Non-Optimal Solutions

#### Bad: Explicitly Set Network Adapter Number

Vagrant allows you to explicitly set the Network Adapter Number to use for networks defined in the
Vagrantfile. This could solve our problem initially if we set the host-only network to use Network
Adapter 3. Vagrant would then by convetion expect Network Adapter 3 to use device name `eth2` which
would be available since no udev rule exist for `eth2`. The problem is that every time a new box is
packaged the last Network Adapter wont work anymore so you would have to increment the network adapter
everytime. VirtualBox limits the number of virtual network adapters to 8 so this isn't a realistic
long-term solution. There are more reasons not to use this but I don't need to get into it. The bottom
line is **DO NOT DO THIS!**

#### Better: Explicitly Set MAC Address

``` ruby Vagrantfile explicit MAC address example
config.vm.network :hostonly, "10.66.66.100", :mac => "080027532232"
```

The problem I have with this solution is that it requires the MAC address in the Vagrantfile.
I don't want to keep track of the MAC address for every network I add. This can also potentially
make it harder for others when configuring custom network options.

## The Optimal Solution

The real solution is to remove the persitant network udev rules immediately before you package a box.
This allows network adapters to be assigned device names without any MAC address issues.

#### Packaging Steps

1. SSH into running VM and remove the persistant network udev rules file:

    `sudo rm /etc/udev/rules.d/70-persistent-net.rules`

2. Shutdown the VM and package it:

    `vagrant halt && vagrant package`
