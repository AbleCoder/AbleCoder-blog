---
layout: post
title: "Vagrant: Packaging Ubuntu Box With Multiple Networks"
date: 2012-04-09 15:50
comments: true
categories:
- Vagrant
- Ubuntu
- Networking
- VirtualBox
- udev
---

I have been using Vagrant to manage an my local development server VMs. For my development servers I add a
host-only network to allow access to it from a static IP address. Until recently when sharing my development
enviroment I would only send people my Vagrantfile and puppet manifests instead of packaging a full blown box
file. It was clearly a waste of time and bandwidth for others to wait for puppet provisioning to download,
install and configure each of the required packages so I decided to package my VM into a box file using
Vagrant's `package` command.

## The Problem: New Package, No Host-Only Network

After packaging my box I needed to test it. First I added it as a base box (using the `vagrant box add`
command). I then created a new Vagrant project and set `config.vm.box` in the Vagrantfile to match
my newly added box. Right off the bat I realized the host-only network wasn't working. The NAT network
was working so I ssh'd (using `vagrant ssh`) into the VM to investigate furthur. It turns out the network
interface device name for the host-only network was `eth2` instead of what it should have been `eth1`.

_**NOTE:** Vagrant by convention will always have a NAT network used for SSH access to the guest OS on
the VM's Network Adapter 1 with device name `eth0` in Ubuntu. Any additional networks defined in the
Vagrantfile will be setup using additional network adapters and an incremented device name in Ubuntu
by default. For example a single network specified in the Vagrantfile would use the VM's Network
Adapter 2 and device name `eth1` in Ubuntu by default._

We could fix this by changing the host-only network to use `eth2` but I rather figure out why `eth1`
is missing and fix it so I others wont have the same issues when using my packaged boxes.

## The Cause: New MAC address, Old udev Rules

The network interface device naming woes (`eth2` instead of `eth1`) stems from the fact that VirtualBox
generates a new mac address when adding network adapters a VM (unless explicitly set). Vagrant knows this
and handles storing and setting the NAT network's MAC address. Vagrant does NOT handle storing and
setting the MAC address for the networks defined in your Vagrantfile. This means when you create a new
VM from your packaged box the NAT network's network adapter will use the orginal MAC address but the
networks defined in the Vagrantfile will generate new MAC addresses by default.

Ubuntu uses [udev](http://wiki.debian.org/udev) to dynamicly update `/dev` (or in other words dynamically
set device names, `eth0` for example). Ubuntu stores persistant udev rules that are parsed by the udevd
daemon on boot in `/etc/udev/rules.d` folder. The persistant udev rules for network devices is stored in
the `/etc/udev/rules.d/70-persistent-net.rules` file:

``` bash /etc/udev/rules.d/70-persistent-net.rules
# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:57:fd:7b", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:53:22:32", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth1"
```

The udev rule for `eth1` has the MAC address for the original VM Network Adapter 2 instead of the MAC
address generated by VirtualBox when creating the new VM from the packaged box. Since the MAC address
of the new VM's network adapter doesn't match the udev rule it is not assigned the device name `eth1`.
Instead the device name `eth2` is assigned.
