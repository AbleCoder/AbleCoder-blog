<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Able Coder]]></title>
  <link href="http://ablecoder.com/atom.xml" rel="self"/>
  <link href="http://ablecoder.com/"/>
  <updated>2012-04-10T20:14:03-07:00</updated>
  <id>http://ablecoder.com/</id>
  <author>
    <name><![CDATA[Brandon Orther]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vagrant: Broken Networking When Packaging Ubuntu Boxes]]></title>
    <link href="http://ablecoder.com/b/2012/04/09/vagrant-broken-networking-when-packaging-ubuntu-boxes/"/>
    <updated>2012-04-09T18:25:00-07:00</updated>
    <id>http://ablecoder.com/b/2012/04/09/vagrant-broken-networking-when-packaging-ubuntu-boxes</id>
    <content type="html"><![CDATA[<p>When packaging my <a href="http://vagrantup.com/">Vagrant</a> virtual enviroment (Ubuntu server with a host-only
network) to a box file I ran into a problem. The issue was that when I tried to use that box file the
host-only network would not work. With a little investigating I realized the problem was caused
by the device name for the network adapter being <code>eth2</code> instead of <code>eth1</code>.</p>

<p>Vagrant uses <code>eth1</code> in the host-only network interface defined in the <code>/etc/network/interfaces</code> file
by default. Since <code>eth1</code> network interface doesn&#8217;t exist (it is <code>eth2</code>) our host-only network does
not work.</p>

<h2>The Cause</h2>

<p>Ubuntu uses <a href="http://wiki.debian.org/udev">udev</a> to dynamically set device names (<code>eth1</code> for example).
Ubuntu stores persistent udev rules for network devices in the
<code>/etc/udev/rules.d/70-persistent-net.rules</code> file. Below is the <code>70-persistent-net.rules</code> file from
the broken host-only network VM.</p>

<figure class='code'><figcaption><span>/etc/udev/rules.d/70-persistent-net.rules</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># PCI device 0x8086:0x100e (e1000)</span>
</span><span class='line'><span class="nv">SUBSYSTEM</span><span class="o">==</span><span class="s2">&quot;net&quot;</span>, <span class="nv">ACTION</span><span class="o">==</span><span class="s2">&quot;add&quot;</span>, <span class="nv">DRIVERS</span><span class="o">==</span><span class="s2">&quot;?*&quot;</span>, ATTR<span class="o">{</span>address<span class="o">}==</span><span class="s2">&quot;08:00:27:57:fd:7b&quot;</span>, ATTR<span class="o">{</span>dev_id<span class="o">}==</span><span class="s2">&quot;0x0&quot;</span>, ATTR<span class="o">{</span><span class="nb">type</span><span class="o">}==</span><span class="s2">&quot;1&quot;</span>, <span class="nv">KERNEL</span><span class="o">==</span><span class="s2">&quot;eth*&quot;</span>, <span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;eth0&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># PCI device 0x8086:0x100e (e1000)</span>
</span><span class='line'><span class="nv">SUBSYSTEM</span><span class="o">==</span><span class="s2">&quot;net&quot;</span>, <span class="nv">ACTION</span><span class="o">==</span><span class="s2">&quot;add&quot;</span>, <span class="nv">DRIVERS</span><span class="o">==</span><span class="s2">&quot;?*&quot;</span>, ATTR<span class="o">{</span>address<span class="o">}==</span><span class="s2">&quot;08:00:27:53:22:32&quot;</span>, ATTR<span class="o">{</span>dev_id<span class="o">}==</span><span class="s2">&quot;0x0&quot;</span>, ATTR<span class="o">{</span><span class="nb">type</span><span class="o">}==</span><span class="s2">&quot;1&quot;</span>, <span class="nv">KERNEL</span><span class="o">==</span><span class="s2">&quot;eth*&quot;</span>, <span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;eth1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see there exists a rule for <code>eth1</code>. The reason the host-only network adapater is assigned
<code>eth2</code> instead of <code>eth1</code> is because it&#8217;s MAC address doesn&#8217;t match the udev rule. The reason the MAC
address doesn&#8217;t match is because when Vagrant creates a new VM (from the box file) VirtualBox by
default generates a random MAC address for that network adapter.</p>

<h2>The Solution</h2>

<p>The solution is to remove the persitant network udev rules immediately before you package the box
file. This allows network adapters to be assigned device names without any MAC address issues.</p>

<h4>Packaging Steps</h4>

<ol>
<li><p>SSH into running VM and remove the persistant network udev rules file:</p>

<p> <code>sudo rm /etc/udev/rules.d/70-persistent-net.rules</code></p></li>
<li><p>Shutdown the VM and package it:</p>

<p> <code>vagrant halt &amp;&amp; vagrant package</code></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The reason I blog: Future-Me]]></title>
    <link href="http://ablecoder.com/b/2012/03/24/the-reason-i-blog-future-me/"/>
    <updated>2012-03-24T02:30:00-07:00</updated>
    <id>http://ablecoder.com/b/2012/03/24/the-reason-i-blog-future-me</id>
    <content type="html"><![CDATA[<h2>Back To Blogging</h2>

<p>Well it&#8217;s official, I&#8217;m starting to blog again. Recently I have been getting back into web
development and in turn spending a lot of time researching and testing new technologies. I have been
away from web development for under a year (I&#8217;ve been more focused on the Dev and DevOps of my
company&#8217;s cross-platform mobile apps for the last 11-months) and its amazing how much new cool shit
is out. That includes the blogging framework <a href="http://octopress.org/">Octopress 2.0</a> I am using for this
site.</p>

<!-- more -->


<h2>Blogging For Tomorrow!</h2>

<blockquote><p>The older I get the more Future-Me likes the decisions Past-Me makes. In college, I was just an evil asshole to Future-Me.</p><footer><strong>@AbleCoder</strong> <cite><a href='https://twitter.com/#!/AbleCoder/status/183474986961485824'>twitter.com/#!/AbleCoder/status/&hellip;</a></cite></footer></blockquote>


<p>As nice as it is to explore all these new projects it can be a time consuming process. A lot of that
time spent is NOT playing with or testing the new technology, instead it is spent getting it setup.
I have put many hours into many projects learning how to get a certain technology working. The biggest
problem I have with all this invested time is that it is more often than not, lost. Just a few weeks
(or even days in some cases) of not working with a newly learned technology and I am sure to forget
a lot. This blog is a gift to Future-Me. This blog will document what I already learned so
Future-Me doesn&#8217;t have to learn it all over again&#8230; The slow way.</p>

<p>Hopefully at some point others will find value in my writings but, until then I am perfectly
content writing these articles for that bad-ass, good-looking, Future-Me.</p>

<h2>Until Then&#8230;</h2>

<p>No one will see this site (for now anyways) so there is no harm in putting in this <em>codeblock</em> for
testing purposes.</p>

<figure class='code'><figcaption><span>Example CoffeeScript Function Context Binding </span><a href='http://coffeescript.org/#fat_arrow'>Coffee Script - Function binding </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">Account = </span><span class="nf">(customer, cart) -&gt;</span>
</span><span class='line'>    <span class="vi">@customer = </span><span class="nx">customer</span>
</span><span class='line'>    <span class="vi">@cart = </span><span class="nx">cart</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s">&#39;.shopping_cart&#39;</span><span class="p">).</span><span class="nx">bind</span> <span class="s">&#39;click&#39;</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span>
</span><span class='line'>        <span class="nx">@customer</span><span class="p">.</span><span class="nx">purchase</span> <span class="nx">@cart</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
